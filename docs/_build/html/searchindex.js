Search.setIndex({"docnames": ["DeltaTopic.nn.TrainingPlan.TrainingPlan", "DeltaTopic.nn.base_components.BALSAMDecoder", "DeltaTopic.nn.base_components.BALSAMEncoder", "DeltaTopic.nn.base_components.DeltaTopicDecoder", "DeltaTopic.nn.base_components.DeltaTopicEncoder", "DeltaTopic.nn.modelhub.BALSAM", "DeltaTopic.nn.modelhub.DeltaTopic", "DeltaTopic.nn.module.BALSAM_module", "DeltaTopic.nn.module.DeltaTopic_module", "about", "api/TrainingPlan", "api/base_components", "api/index", "api/model", "getting_started", "index", "installation", "references"], "filenames": ["DeltaTopic.nn.TrainingPlan.TrainingPlan.rst", "DeltaTopic.nn.base_components.BALSAMDecoder.rst", "DeltaTopic.nn.base_components.BALSAMEncoder.rst", "DeltaTopic.nn.base_components.DeltaTopicDecoder.rst", "DeltaTopic.nn.base_components.DeltaTopicEncoder.rst", "DeltaTopic.nn.modelhub.BALSAM.rst", "DeltaTopic.nn.modelhub.DeltaTopic.rst", "DeltaTopic.nn.module.BALSAM_module.rst", "DeltaTopic.nn.module.DeltaTopic_module.rst", "about.rst", "api/TrainingPlan.rst", "api/base_components.rst", "api/index.rst", "api/model.rst", "getting_started.rst", "index.rst", "installation.rst", "references.rst"], "titles": ["DeltaTopic.nn.TrainingPlan.TrainingPlan", "DeltaTopic.nn.base_components.BALSAMDecoder", "DeltaTopic.nn.base_components.BALSAMEncoder", "DeltaTopic.nn.base_components.DeltaTopicDecoder", "DeltaTopic.nn.base_components.DeltaTopicEncoder", "DeltaTopic.nn.modelhub.BALSAM", "DeltaTopic.nn.modelhub.DeltaTopic", "DeltaTopic.nn.module.BALSAM_module", "DeltaTopic.nn.module.DeltaTopic_module", "About", "TrainingPlan", "Base components", "API", "Model", "Quick Start", "Documentaiton for BALSAM and DeltaTopic", "Installation", "References"], "terms": {"class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13], "arg": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13], "ani": [0, 1, 2, 3, 4, 7, 8, 10, 11], "kwarg": [0, 1, 2, 3, 4, 7, 8, 10, 11, 13], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13], "lightn": [0, 10, 16], "modul": [0, 9, 10, 11], "task": [0, 10], "train": [0, 5, 6, 10, 12, 13], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14], "A": [0, 4, 9, 10, 11], "instanc": [0, 10], "from": [0, 9, 10, 11, 12, 13, 14, 15, 16], "basemoduleclass": [0, 10], "lr": [0, 10, 13], "learn": [0, 9, 10, 13, 15, 16], "rate": [0, 4, 9, 10, 11, 13], "us": [0, 2, 10, 11, 13, 14, 16], "optim": [0, 10, 12, 13], "weight_decai": [0, 10], "weight": [0, 10, 13], "decai": [0, 10], "optimizatoin": [0, 10], "ep": [0, 10], "One": [0, 10], "adam": [0, 10], "adamw": [0, 10], "n_steps_kl_warmup": [0, 10, 13], "number": [0, 1, 2, 4, 7, 8, 10, 11, 13], "step": [0, 10, 13, 14], "minibatch": [0, 10, 13], "scale": [0, 7, 8, 9, 10, 13], "kl": [0, 7, 8, 10, 11, 13], "diverg": [0, 10, 11, 13], "0": [0, 1, 3, 4, 7, 8, 10, 13], "1": [0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 13], "onli": [0, 9, 10, 13, 14], "activ": [0, 10, 13], "when": [0, 10, 13], "n_epochs_kl_warmup": [0, 10, 13], "i": [0, 9, 10, 12, 13, 15], "set": [0, 4, 9, 10, 11, 13, 16], "none": [0, 4, 10, 13], "epoch": [0, 10, 13, 14], "overrid": [0, 10, 13], "both": [0, 10, 13, 15], "ar": [0, 9, 10, 13, 14], "reduce_lr_on_plateau": [0, 10], "whether": [0, 2, 4, 10, 11], "monitor": [0, 10], "valid": [0, 10, 12], "loss": [0, 7, 8, 10, 12], "reduc": [0, 10], "lr_scheduler_metr": [0, 10], "plateau": [0, 10], "lr_factor": [0, 10], "factor": [0, 7, 8, 10], "lr_patienc": [0, 10], "improv": [0, 9, 10], "after": [0, 10], "which": [0, 10, 12, 13], "lr_threshold": [0, 10], "threshold": [0, 10], "measur": [0, 9, 10], "new": [0, 9, 10], "optimum": [0, 10], "metric": [0, 10], "track": [0, 10], "reduct": [0, 10], "lr_min": [0, 10], "minimum": [0, 10], "allow": [0, 9, 10], "loss_kwarg": [0, 10], "keyword": [0, 5, 6, 10, 13], "pass": [0, 10, 11, 13], "method": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15], "kl_weight": [0, 10], "should": [0, 10], "here": [0, 10, 14], "handl": [0, 10], "automat": [0, 10], "__init__": [0, 1, 2, 3, 4, 5, 6, 7, 8], "float": [0, 1, 4, 7, 8, 11, 13], "001": [0, 13], "1e": 0, "06": 0, "01": 0, "liter": 0, "int": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 13], "400": [0, 14], "bool": [0, 2, 4, 7, 8, 11, 13], "fals": [0, 4, 11, 13], "6": 0, "30": 0, "elbo_valid": 0, "reconstruction_loss_valid": 0, "kl_local_valid": 0, "elbo_train": 0, "attribut": [0, 5, 6], "decod": [1, 3, 11, 12], "network": [1, 2, 3, 11, 12], "balsam": [1, 2, 11, 12, 13, 14], "model": [1, 2, 5, 6, 9, 10, 11, 12, 14, 15, 17], "gener": [1, 3, 9, 11, 12, 13], "spike": [1, 3, 11, 13, 14], "slab": [1, 3, 11, 13, 14], "prior": [1, 3, 7, 8, 11, 15], "beta": [1, 11], "n_input": [1, 2, 3, 11], "The": [1, 2, 3, 4, 9, 11, 15, 16], "input": [1, 2, 3, 4, 11], "dimens": [1, 4, 7, 8, 11], "e": [1, 9, 11, 13], "g": [1, 11, 13], "topic": [1, 2, 5, 6, 9, 11, 13, 14, 15, 17], "n_output": [1, 2, 3, 4, 11], "output": [1, 2, 3, 4, 10, 11, 13, 14], "tumber": [1, 11], "gene": [1, 7, 8, 9, 11, 15, 16], "pip0": [1, 11], "probabl": [1, 3, 11, 13], "v0": [1, 11], "varianc": [1, 3, 11], "encod": [2, 4, 6, 7, 8, 9, 11, 12, 13, 15, 17], "data": [2, 7, 8, 9, 10, 11, 13, 15, 16], "latent": [2, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 17], "represent": [2, 11], "featur": [2, 11], "n_hidden": [2, 4, 11], "hidden": [2, 4, 7, 8, 11], "unit": [2, 11], "n_layers_individu": [2, 4, 11], "layer": [2, 4, 6, 7, 8, 11, 13, 14], "use_batch_norm": [2, 4, 11], "batch": [2, 11], "normal": [2, 7, 8, 9, 11], "log_vari": [2, 4, 7, 8, 11], "appli": [2, 4, 9, 11], "log": [2, 4, 7, 8, 11], "x": [2, 4, 6, 11, 13, 14], "128": [2, 4, 7, 8, 13], "3": [2, 9, 16], "true": [2, 4, 7, 8, 13], "rho": [3, 7, 8, 11], "delta": [3, 8, 9, 11], "dimension": [3, 4, 5, 6, 11, 13], "pip0_rho": [3, 7, 8, 11], "posterior": [3, 11], "inclus": [3, 11], "pip0_delta": [3, 8, 11], "v0_rho": [3, 11], "vo_delta": [3, 11], "v0_delta": 3, "two": [4, 9, 11], "head": [4, 11], "map": [4, 11], "share": [4, 11], "space": [4, 5, 6, 7, 8, 9, 11, 13, 14, 15], "through": [4, 9, 11, 13, 14], "stack": [4, 11], "individu": [4, 7, 8, 11], "fulli": [4, 11], "connect": [4, 11], "n_input_list": [4, 11], "list": [4, 11, 13], "tensor": [4, 11], "mask": [4, 11], "first": [4, 9, 11], "experiment": [4, 11], "mask_first": [4, 11], "transpos": [4, 11], "node": [4, 11], "per": [4, 11], "n_layers_shar": [4, 11], "dropout_r": [4, 11], "dropout": [4, 11], "each": [4, 9, 11], "have": [4, 9, 11], "batchnorm": [4, 11], "transform": [4, 11], "combine_method": [4, 11], "combin": [4, 9, 11], "either": [4, 11], "add": [4, 11], "concaten": [4, 11], "torch": [4, 11, 16], "2": [4, 7, 8, 9], "n_cat_list": 4, "iter": 4, "str": [4, 13], "adata_seq": [5, 6, 13], "anndata": [5, 6, 13, 14, 16], "n_latent": [5, 6, 7, 8, 13, 14], "32": [5, 6, 7, 13, 14], "model_kwarg": [5, 6, 13], "bayesian": [5, 9, 13, 15], "analysi": [5, 6, 9, 13, 15], "spars": [5, 13, 15], "associ": [5, 13, 15], "matrix": [5, 13, 15], "adata": [5, 6, 13, 14], "object": [5, 6, 13, 16], "ha": [5, 6, 9, 13], "been": [5, 6, 9, 13], "regist": [5, 6, 13, 14], "via": [5, 6, 13], "setup_anndata": [5, 6, 13, 14], "balsam_modul": [5, 13], "exampl": [5, 6, 13, 14], "read_h5ad": [5, 6, 13], "path_to_anndata": [5, 13], "util": [5, 6, 13, 14], "100": [5, 6, 13], "dynam": [6, 9, 13, 15, 17], "transcriptom": [6, 9, 13, 15, 17], "pattern": [6, 9, 13, 15, 17], "deltatopic_modul": [6, 13], "path_to_anndata_spl": [6, 13], "x_unsplic": [6, 13], "sc": [6, 13, 14], "read": [6, 13, 14], "obsm": [6, 13, 14], "unspliced_express": [6, 13, 14], "copi": [6, 13, 14], "count": [6, 9, 11, 13, 14, 15], "unspliced_obsm_kei": [6, 13, 14], "balasm": 7, "n_gene": [7, 8], "n_layers_encoder_individu": [7, 8], "dim_hidden_encod": [7, 8], "default": [7, 8, 13], "kl_weight_beta": [7, 8], "numer": [7, 8], "stabil": [7, 8], "Not": [7, 8], "10": 8, "singl": [9, 16], "cell": [9, 13, 15, 16, 17], "rna": [9, 11], "seq": 9, "technologi": 9, "successfulli": 9, "profil": 9, "regulatori": 9, "genom": 9, "chang": 9, "studi": 9, "mani": 9, "human": 9, "diseas": 9, "mechan": 9, "our": 9, "capabl": 9, "level": [9, 11], "mrna": 9, "molecul": 9, "dramat": 9, "research": 9, "paradigm": 9, "translat": 9, "medicin": 9, "typic": 9, "implicitli": 9, "assum": 9, "observ": [9, 10], "transcript": 9, "static": [9, 15], "valu": 9, "consid": 9, "everi": 9, "fix": 9, "particular": 9, "state": [9, 13, 14], "recent": 9, "develop": 9, "complementari": 9, "express": [9, 15], "speed": 9, "splice": [9, 11, 13, 14, 15], "take": 9, "differ": 9, "between": [9, 11, 15], "unsplic": [9, 11, 13, 14, 15], "scrna": 9, "sever": 9, "extend": 9, "origin": 9, "pioneer": 9, "la": 9, "manno": 9, "et": [9, 15, 16, 17], "al": [9, 15, 16, 17], "cowork": 9, "notabl": 9, "scvelo": 9, "recov": 9, "ordinari": 9, "differenti": 9, "equat": 9, "od": 9, "independ": 9, "time": 9, "why": 9, "difficult": 9, "estim": 9, "full": 9, "limit": 9, "snapshot": 9, "howev": 9, "probabilist": 9, "infer": [9, 12, 13, 15], "often": 9, "pose": 9, "substanti": 9, "challeng": 9, "mai": 9, "greatli": 9, "vari": 9, "depend": 9, "embed": 9, "although": 9, "newli": 9, "machin": 9, "base": [9, 10, 12, 13], "mixtur": 9, "robust": 9, "accuraci": 9, "development": 9, "process": [9, 12], "4": 9, "exist": [9, 13], "veloc": 9, "reli": [9, 15], "critic": 9, "assumpt": 9, "unmet": 9, "most": 9, "design": 9, "dataset": [9, 13], "especi": 9, "those": 9, "collect": 9, "patient": 9, "deriv": 9, "cancer": [9, 17], "sampl": [9, 11, 13], "span": 9, "over": 9, "evolutionari": 9, "progress": 9, "In": 9, "case": 9, "control": 9, "reach": 9, "steadi": 9, "like": 9, "fail": 9, "provid": 9, "enough": 9, "inform": [9, 10], "pathwai": 9, "Such": 9, "discontinu": 9, "sparsiti": 9, "somewhat": 9, "forc": 9, "statist": 9, "algorithm": 9, "an": [9, 14, 15], "unrealist": 9, "interpol": 9, "point": 9, "high": 9, "uncertainti": 9, "5": 9, "do": [9, 16], "we": [9, 16], "need": 9, "nevertheless": 9, "implic": 9, "valuabl": 9, "perspect": 9, "make": 9, "more": 9, "beyond": 9, "convent": 9, "To": [9, 16], "overcom": 9, "poor": 9, "incomplet": 9, "propos": 9, "framework": [9, 16], "deltatop": [9, 10, 11, 12, 13, 14, 16], "short": [9, 15], "idea": 9, "guid": [9, 14], "unsupervis": 9, "discov": 9, "applic": 9, "order": 9, "approxim": 9, "relationship": [9, 15], "instead": [9, 13], "trajectori": 9, "For": [9, 14], "view": [9, 15], "document": 9, "word": 9, "directli": 9, "interpret": 9, "while": 9, "keep": 9, "": 9, "imput": 9, "miss": 9, "simplifi": 9, "also": [9, 13], "permit": 9, "intuit": 9, "multipl": 9, "approach": [9, 15, 16], "pancreat": [9, 17], "ductal": 9, "adenocarcinoma": 9, "pdac": 9, "one": 9, "type": [9, 13], "prognosi": 9, "identifi": 9, "surviv": 9, "specif": [9, 13, 15], "mark": 9, "uniqu": 9, "find": 9, "further": 9, "dissect": 9, "sub": 9, "clump": 9, "togeth": 9, "tradit": 9, "cluster": 9, "novel": 9, "along": 9, "see": 9, "zhang": [9, 15, 16, 17], "2023": [9, 16, 17], "detail": [9, 15], "exposit": 9, "gioel": 9, "ruslan": 9, "soldatov": 9, "amit": 9, "zeisel": 9, "emeli": 9, "braun": 9, "hannah": 9, "hochgern": 9, "viktor": 9, "petukhov": 9, "katja": 9, "lidschreib": 9, "maria": 9, "kastriti": 9, "peter": 9, "l": 9, "\u00f6": 9, "nnerberg": 9, "alessandro": 9, "furlan": 9, "jean": 9, "fan": 9, "lar": 9, "borm": 9, "zehua": 9, "liu": 9, "david": 9, "van": 9, "bruggen": 9, "jimin": 9, "guo": 9, "xiaol": 9, "he": 9, "roger": 9, "barker": 9, "erik": 9, "sundstr": 9, "m": 9, "gon": 9, "\u00e7": 9, "alo": 9, "castelo": 9, "branco": 9, "patrick": 9, "cramer": 9, "igor": 9, "adameyko": 9, "sten": 9, "linnarsson": 9, "v": 9, "kharchenko": 9, "natur": 9, "560": 9, "7719": 9, "494": 9, "498": 9, "august": 9, "2018": 9, "volker": 9, "bergen": 9, "mariu": 9, "lang": 9, "stefan": 9, "peidli": 9, "f": 9, "alexand": 9, "wolf": 9, "fabian": 9, "j": 9, "thei": 9, "transient": 9, "nat": 9, "biotechnol": 9, "2020": 9, "gennadi": 9, "gorin": 9, "meichen": 9, "fang": 9, "tara": 9, "chari": 9, "lior": 9, "pachter": 9, "unravel": [9, 17], "plo": 9, "comput": [9, 11], "biol": 9, "18": 9, "9": [9, 13], "e1010492": 9, "septemb": 9, "2022": 9, "yichen": 9, "gu": 9, "t": 9, "blaauw": 9, "joshua": 9, "welch": 9, "variat": [9, 13, 15], "cellular": [9, 15], "kamalika": 9, "chaudhuri": 9, "stefani": 9, "jegelka": 9, "le": 9, "song": 9, "csaba": 9, "szepesvari": 9, "gang": 9, "niu": 9, "sivan": 9, "sabato": 9, "editor": 9, "proceed": 9, "39th": 9, "intern": 9, "confer": 9, "volum": 9, "162": 9, "7887": 9, "7901": 9, "pmlr": 9, "current": 9, "futur": 9, "mol": 9, "syst": 9, "17": 9, "8": [9, 16], "e10282": 9, "2021": 9, "pytorch": 10, "wrappper": 10, "defin": [10, 11], "loader": 10, "nn": [10, 11, 13, 14], "lightningmodul": 10, "forward": [10, 11], "passthrough": 10, "properti": 10, "dure": [10, 13], "n_obs_train": 10, "thi": 10, "updat": 10, "rescal": 10, "validation_epoch_end": 10, "aggreg": [10, 12], "build": [11, 12, 13, 16], "block": 11, "base_compon": [11, 12, 13], "balsamdecod": [11, 12], "z": [11, 13], "get_beta": 11, "spike_logit": 11, "slab_mean": 11, "slab_lnvar": 11, "bias_d": 11, "repameter": 11, "trick": 11, "logit": 11, "mean": [11, 13], "bia": 11, "term": 11, "glm": 11, "get_rho": 11, "helper": 11, "function": [11, 12, 13], "get": 11, "soft_max": 11, "softmax": 11, "sparse_kl_loss": 11, "logit_0": 11, "lnvar_0": 11, "balsamencod": [11, 12], "cat_list": 11, "deltatopicdecod": [11, 12], "variabl": 11, "deltatopicencod": [11, 12], "bias_gen": 11, "reparameter": 11, "get_rho_delta": 11, "pior": 11, "y": 11, "second": 11, "tensorm": 11, "trainingplan": [12, 13], "compon": 12, "contain": 12, "basic": [12, 14], "neural": 12, "netwoek": 12, "effici": 12, "specifi": [12, 13], "dataload": 12, "modelhub": [13, 14], "basemodelclass": 13, "get_latent_represent": [13, 14], "determinist": 13, "output_softmax_z": 13, "batch_siz": 13, "return": 13, "proport": [13, 14], "If": [13, 16], "stochast": 13, "otherwis": 13, "unnorm": 13, "size": 13, "load": [13, 14], "get_paramet": [13, 14], "save_dir": [13, 14], "overwrit": 13, "save": [13, 14], "directori": 13, "file": [13, 14, 16], "dir_path": 13, "save_anndata": 13, "anndata_write_kwarg": 13, "path": 13, "alreadi": 13, "error": 13, "rais": [13, 16], "write": 13, "max_epoch": 13, "1000": 13, "use_gpu": 13, "train_siz": 13, "validation_s": 13, "plan_kwarg": 13, "dict": 13, "amort": 13, "gpu": 13, "avail": 13, "index": 13, "name": 13, "cuda": 13, "cpu": 13, "rang": 13, "test": 13, "remain": 13, "belong": 13, "floor": 13, "75": 13, "n_ob": 13, "adata_spl": 13, "adata_unspl": [13, 14], "get_reconstruction_error": 13, "reconstruct": 13, "equival": 13, "structur": 13, "initi": 13, "classmethod": 13, "instanti": 13, "organ": 13, "same": 13, "wai": 13, "dictionari": 13, "neither": 13, "trainer": 13, "nor": 13, "histori": 13, "you": [14, 16], "briefli": 14, "how": 14, "your": 14, "h5ad": 14, "scanpi": [14, 16], "import": 14, "filename_spl": 14, "filename_unspl": 14, "setup": [14, 16], "can": 14, "skip": 14, "addit": 14, "panda": 14, "pd": 14, "savepath": 14, "topics_np": 14, "datafram": 14, "to_csv": 14, "savefilenam": 14, "final": 14, "perform": 14, "favorit": 14, "analyi": [14, 16], "paper": [14, 16], "pleas": 14, "refer": 14, "rmd": [14, 16], "project": [14, 16], "repositori": [14, 16], "summar": 15, "raw": 15, "admixtur": 15, "autoencod": 15, "vae": 15, "induc": 15, "gell": 15, "extens": 15, "ascertain": 15, "common": 15, "descript": 15, "preprint": [15, 17], "requir": 16, "python": 16, "later": 16, "recommend": 16, "miniconda": 16, "pip": 16, "work": 16, "latest": 16, "github": 16, "git": 16, "clone": 16, "http": 16, "com": 16, "causalpathlab": 16, "py": 16, "pytroch": 16, "deep": 16, "annot": 16, "toolkit": 16, "numpi": 16, "scipi": 16, "follow": 16, "r": 16, "packag": 16, "tabl": 16, "dplyr": 16, "wrangl": 16, "goseq": 16, "fgsea": 16, "enrich": 16, "ggplot2": 16, "comlexheatmap": 16, "circliz": 16, "visual": 16, "reproduc": 16, "run": 16, "issu": 16, "hesit": 16, "u": 16, "zhang23": 17}, "objects": {"DeltaTopic.nn": [[10, 0, 0, "-", "TrainingPlan"], [11, 0, 0, "-", "base_components"], [13, 0, 0, "-", "modelhub"]], "DeltaTopic.nn.TrainingPlan": [[10, 1, 1, "", "TrainingPlan"]], "DeltaTopic.nn.TrainingPlan.TrainingPlan": [[0, 2, 1, "", "__init__"], [10, 2, 1, "", "forward"], [10, 3, 1, "", "kl_weight"], [10, 3, 1, "", "n_obs_training"], [10, 2, 1, "", "validation_epoch_end"]], "DeltaTopic.nn.base_components": [[11, 1, 1, "", "BALSAMDecoder"], [11, 1, 1, "", "BALSAMEncoder"], [11, 1, 1, "", "DeltaTopicDecoder"], [11, 1, 1, "", "DeltaTopicEncoder"]], "DeltaTopic.nn.base_components.BALSAMDecoder": [[1, 2, 1, "", "__init__"], [11, 2, 1, "", "forward"], [11, 2, 1, "", "get_beta"], [11, 2, 1, "", "get_rho"], [11, 2, 1, "", "soft_max"], [11, 2, 1, "", "sparse_kl_loss"]], "DeltaTopic.nn.base_components.BALSAMEncoder": [[2, 2, 1, "", "__init__"], [11, 2, 1, "", "forward"]], "DeltaTopic.nn.base_components.DeltaTopicDecoder": [[3, 2, 1, "", "__init__"], [11, 2, 1, "", "forward"], [11, 2, 1, "", "get_beta"], [11, 2, 1, "", "get_rho_delta"], [11, 2, 1, "", "soft_max"], [11, 2, 1, "", "sparse_kl_loss"]], "DeltaTopic.nn.base_components.DeltaTopicEncoder": [[4, 2, 1, "", "__init__"], [11, 2, 1, "", "forward"]], "DeltaTopic.nn.modelhub": [[13, 1, 1, "", "BALSAM"], [13, 1, 1, "", "DeltaTopic"]], "DeltaTopic.nn.modelhub.BALSAM": [[5, 2, 1, "", "__init__"], [13, 2, 1, "", "get_latent_representation"], [13, 2, 1, "", "get_parameters"], [13, 2, 1, "", "save"], [13, 2, 1, "", "train"]], "DeltaTopic.nn.modelhub.DeltaTopic": [[6, 2, 1, "", "__init__"], [13, 2, 1, "", "get_latent_representation"], [13, 2, 1, "", "get_parameters"], [13, 2, 1, "", "get_reconstruction_error"], [13, 2, 1, "", "load"], [13, 2, 1, "", "save"], [13, 2, 1, "", "train"]], "DeltaTopic.nn.module": [[7, 1, 1, "", "BALSAM_module"], [8, 1, 1, "", "DeltaTopic_module"]], "DeltaTopic.nn.module.BALSAM_module": [[7, 2, 1, "", "__init__"]], "DeltaTopic.nn.module.DeltaTopic_module": [[8, 2, 1, "", "__init__"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"]}, "titleterms": {"deltatop": [0, 1, 2, 3, 4, 5, 6, 7, 8, 15], "nn": [0, 1, 2, 3, 4, 5, 6, 7, 8], "trainingplan": [0, 10], "base_compon": [1, 2, 3, 4], "balsamdecod": 1, "balsamencod": 2, "deltatopicdecod": 3, "deltatopicencod": 4, "modelhub": [5, 6], "balsam": [5, 15], "modul": [7, 8], "balsam_modul": 7, "deltatopic_modul": 8, "about": 9, "base": 11, "compon": 11, "api": 12, "model": 13, "quick": 14, "start": 14, "data": 14, "prepar": 14, "train": 14, "analysi": [14, 16], "documentaiton": 15, "instal": 16, "pypi": 16, "develop": 16, "version": 16, "depend": 16, "pipelin": 16, "refer": 17}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9, "sphinx": 57}, "alltitles": {"DeltaTopic.nn.TrainingPlan.TrainingPlan": [[0, "deltatopic-nn-trainingplan-trainingplan"]], "DeltaTopic.nn.base_components.BALSAMDecoder": [[1, "deltatopic-nn-base-components-balsamdecoder"]], "DeltaTopic.nn.base_components.BALSAMEncoder": [[2, "deltatopic-nn-base-components-balsamencoder"]], "DeltaTopic.nn.base_components.DeltaTopicDecoder": [[3, "deltatopic-nn-base-components-deltatopicdecoder"]], "DeltaTopic.nn.base_components.DeltaTopicEncoder": [[4, "deltatopic-nn-base-components-deltatopicencoder"]], "DeltaTopic.nn.modelhub.BALSAM": [[5, "deltatopic-nn-modelhub-balsam"]], "DeltaTopic.nn.modelhub.DeltaTopic": [[6, "deltatopic-nn-modelhub-deltatopic"]], "DeltaTopic.nn.module.BALSAM_module": [[7, "deltatopic-nn-module-balsam-module"]], "DeltaTopic.nn.module.DeltaTopic_module": [[8, "deltatopic-nn-module-deltatopic-module"]], "About": [[9, "about"]], "TrainingPlan": [[10, "trainingplan"]], "Base components": [[11, "base-components"]], "API": [[12, "api"]], "Model": [[13, "model"]], "Quick Start": [[14, "quick-start"]], "Data Preparation": [[14, "data-preparation"]], "Training": [[14, "training"]], "Analysis": [[14, "analysis"]], "Documentaiton for BALSAM and DeltaTopic": [[15, "documentaiton-for-balsam-and-deltatopic"]], "Installation": [[16, "installation"]], "PyPI": [[16, "pypi"]], "Development Version": [[16, "development-version"]], "Dependencies": [[16, "dependencies"]], "Analysis pipeline": [[16, "analysis-pipeline"]], "References": [[17, "references"]]}, "indexentries": {"trainingplan (class in deltatopic.nn.trainingplan)": [[0, "DeltaTopic.nn.TrainingPlan.TrainingPlan"], [10, "DeltaTopic.nn.TrainingPlan.TrainingPlan"]], "__init__() (deltatopic.nn.trainingplan.trainingplan method)": [[0, "DeltaTopic.nn.TrainingPlan.TrainingPlan.__init__"]], "balsamdecoder (class in deltatopic.nn.base_components)": [[1, "DeltaTopic.nn.base_components.BALSAMDecoder"], [11, "DeltaTopic.nn.base_components.BALSAMDecoder"]], "__init__() (deltatopic.nn.base_components.balsamdecoder method)": [[1, "DeltaTopic.nn.base_components.BALSAMDecoder.__init__"]], "balsamencoder (class in deltatopic.nn.base_components)": [[2, "DeltaTopic.nn.base_components.BALSAMEncoder"], [11, "DeltaTopic.nn.base_components.BALSAMEncoder"]], "__init__() (deltatopic.nn.base_components.balsamencoder method)": [[2, "DeltaTopic.nn.base_components.BALSAMEncoder.__init__"]], "deltatopicdecoder (class in deltatopic.nn.base_components)": [[3, "DeltaTopic.nn.base_components.DeltaTopicDecoder"], [11, "DeltaTopic.nn.base_components.DeltaTopicDecoder"]], "__init__() (deltatopic.nn.base_components.deltatopicdecoder method)": [[3, "DeltaTopic.nn.base_components.DeltaTopicDecoder.__init__"]], "deltatopicencoder (class in deltatopic.nn.base_components)": [[4, "DeltaTopic.nn.base_components.DeltaTopicEncoder"], [11, "DeltaTopic.nn.base_components.DeltaTopicEncoder"]], "__init__() (deltatopic.nn.base_components.deltatopicencoder method)": [[4, "DeltaTopic.nn.base_components.DeltaTopicEncoder.__init__"]], "balsam (class in deltatopic.nn.modelhub)": [[5, "DeltaTopic.nn.modelhub.BALSAM"], [13, "DeltaTopic.nn.modelhub.BALSAM"]], "__init__() (deltatopic.nn.modelhub.balsam method)": [[5, "DeltaTopic.nn.modelhub.BALSAM.__init__"]], "deltatopic (class in deltatopic.nn.modelhub)": [[6, "DeltaTopic.nn.modelhub.DeltaTopic"], [13, "DeltaTopic.nn.modelhub.DeltaTopic"]], "__init__() (deltatopic.nn.modelhub.deltatopic method)": [[6, "DeltaTopic.nn.modelhub.DeltaTopic.__init__"]], "balsam_module (class in deltatopic.nn.module)": [[7, "DeltaTopic.nn.module.BALSAM_module"]], "__init__() (deltatopic.nn.module.balsam_module method)": [[7, "DeltaTopic.nn.module.BALSAM_module.__init__"]], "deltatopic_module (class in deltatopic.nn.module)": [[8, "DeltaTopic.nn.module.DeltaTopic_module"]], "__init__() (deltatopic.nn.module.deltatopic_module method)": [[8, "DeltaTopic.nn.module.DeltaTopic_module.__init__"]], "deltatopic.nn.trainingplan": [[10, "module-DeltaTopic.nn.TrainingPlan"]], "forward() (deltatopic.nn.trainingplan.trainingplan method)": [[10, "DeltaTopic.nn.TrainingPlan.TrainingPlan.forward"]], "kl_weight (deltatopic.nn.trainingplan.trainingplan property)": [[10, "DeltaTopic.nn.TrainingPlan.TrainingPlan.kl_weight"]], "module": [[10, "module-DeltaTopic.nn.TrainingPlan"], [11, "module-DeltaTopic.nn.base_components"], [13, "module-DeltaTopic.nn.modelhub"]], "n_obs_training (deltatopic.nn.trainingplan.trainingplan property)": [[10, "DeltaTopic.nn.TrainingPlan.TrainingPlan.n_obs_training"]], "validation_epoch_end() (deltatopic.nn.trainingplan.trainingplan method)": [[10, "DeltaTopic.nn.TrainingPlan.TrainingPlan.validation_epoch_end"]], "deltatopic.nn.base_components": [[11, "module-DeltaTopic.nn.base_components"]], "forward() (deltatopic.nn.base_components.balsamdecoder method)": [[11, "DeltaTopic.nn.base_components.BALSAMDecoder.forward"]], "forward() (deltatopic.nn.base_components.balsamencoder method)": [[11, "DeltaTopic.nn.base_components.BALSAMEncoder.forward"]], "forward() (deltatopic.nn.base_components.deltatopicdecoder method)": [[11, "DeltaTopic.nn.base_components.DeltaTopicDecoder.forward"]], "forward() (deltatopic.nn.base_components.deltatopicencoder method)": [[11, "DeltaTopic.nn.base_components.DeltaTopicEncoder.forward"]], "get_beta() (deltatopic.nn.base_components.balsamdecoder method)": [[11, "DeltaTopic.nn.base_components.BALSAMDecoder.get_beta"]], "get_beta() (deltatopic.nn.base_components.deltatopicdecoder method)": [[11, "DeltaTopic.nn.base_components.DeltaTopicDecoder.get_beta"]], "get_rho() (deltatopic.nn.base_components.balsamdecoder method)": [[11, "DeltaTopic.nn.base_components.BALSAMDecoder.get_rho"]], "get_rho_delta() (deltatopic.nn.base_components.deltatopicdecoder method)": [[11, "DeltaTopic.nn.base_components.DeltaTopicDecoder.get_rho_delta"]], "soft_max() (deltatopic.nn.base_components.balsamdecoder method)": [[11, "DeltaTopic.nn.base_components.BALSAMDecoder.soft_max"]], "soft_max() (deltatopic.nn.base_components.deltatopicdecoder method)": [[11, "DeltaTopic.nn.base_components.DeltaTopicDecoder.soft_max"]], "sparse_kl_loss() (deltatopic.nn.base_components.balsamdecoder method)": [[11, "DeltaTopic.nn.base_components.BALSAMDecoder.sparse_kl_loss"]], "sparse_kl_loss() (deltatopic.nn.base_components.deltatopicdecoder method)": [[11, "DeltaTopic.nn.base_components.DeltaTopicDecoder.sparse_kl_loss"]], "deltatopic.nn.modelhub": [[13, "module-DeltaTopic.nn.modelhub"]], "get_latent_representation() (deltatopic.nn.modelhub.balsam method)": [[13, "DeltaTopic.nn.modelhub.BALSAM.get_latent_representation"]], "get_latent_representation() (deltatopic.nn.modelhub.deltatopic method)": [[13, "DeltaTopic.nn.modelhub.DeltaTopic.get_latent_representation"]], "get_parameters() (deltatopic.nn.modelhub.balsam method)": [[13, "DeltaTopic.nn.modelhub.BALSAM.get_parameters"]], "get_parameters() (deltatopic.nn.modelhub.deltatopic method)": [[13, "DeltaTopic.nn.modelhub.DeltaTopic.get_parameters"]], "get_reconstruction_error() (deltatopic.nn.modelhub.deltatopic method)": [[13, "DeltaTopic.nn.modelhub.DeltaTopic.get_reconstruction_error"]], "load() (deltatopic.nn.modelhub.deltatopic class method)": [[13, "DeltaTopic.nn.modelhub.DeltaTopic.load"]], "save() (deltatopic.nn.modelhub.balsam method)": [[13, "DeltaTopic.nn.modelhub.BALSAM.save"]], "save() (deltatopic.nn.modelhub.deltatopic method)": [[13, "DeltaTopic.nn.modelhub.DeltaTopic.save"]], "train() (deltatopic.nn.modelhub.balsam method)": [[13, "DeltaTopic.nn.modelhub.BALSAM.train"]], "train() (deltatopic.nn.modelhub.deltatopic method)": [[13, "DeltaTopic.nn.modelhub.DeltaTopic.train"]]}})